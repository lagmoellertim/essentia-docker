name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
      ESSENTIA_COMMIT:
        description: "Essentia commit hash or branch to build"
        required: true
        default: "HEAD"
        type: string
      LATEST:
        description: "Also push as latest tag"
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/essentia

jobs:
  build:
    strategy:
      matrix:
        include:
          # Builds without tensorflow
          - name: "essentia"
            dockerfile: "Dockerfile"
            args: "ENABLE_TENSORFLOW=0,ENABLE_VAMP=1,ESSENTIA_COMMIT=${{ github.event.inputs.ESSENTIA_COMMIT }}"
            platforms: "linux/amd64"
            runs-on: "ubuntu-latest"
            tags: "${{ github.event.inputs.ESSENTIA_COMMIT }}${{ github.event.inputs.LATEST && ',latest' || '' }}"
          - name: "essentia-arm64"
            dockerfile: "Dockerfile"
            args: "ENABLE_TENSORFLOW=0,ENABLE_VAMP=1,ESSENTIA_COMMIT=${{ github.event.inputs.ESSENTIA_COMMIT }}"
            platforms: "linux/arm64"
            runs-on: "ubuntu-latest-arm64"
            tags: "${{ github.event.inputs.ESSENTIA_COMMIT }}${{ github.event.inputs.LATEST && ',latest' || '' }}"

          # Builds with tensorflow (CPU)
          - name: "essentia-tensorflow"
            dockerfile: "Dockerfile"
            args: "ENABLE_TENSORFLOW=1,TENSORFLOW_USE_GPU=0,ENABLE_VAMP=1,ESSENTIA_COMMIT=${{ github.event.inputs.ESSENTIA_COMMIT }}"
            platforms: "linux/amd64"
            runs-on: "ubuntu-latest"
            tags: "${{ github.event.inputs.ESSENTIA_COMMIT }}-tensorflow${{ github.event.inputs.LATEST && ',latest-tensorflow' || '' }}"
          - name: "essentia-tensorflow-arm64"
            dockerfile: "Dockerfile"
            args: "ENABLE_TENSORFLOW=1,TENSORFLOW_USE_GPU=0,ENABLE_VAMP=1,ESSENTIA_COMMIT=${{ github.event.inputs.ESSENTIA_COMMIT }}"
            platforms: "linux/arm64"
            runs-on: "ubuntu-latest-arm64"
            tags: "${{ github.event.inputs.ESSENTIA_COMMIT }}-tensorflow${{ github.event.inputs.LATEST && ',latest-tensorflow' || '' }}"

          # Builds with tensorflow (GPU, only for amd64)
          - name: "essentia-tensorflow-gpu"
            dockerfile: "Dockerfile"
            args: "ENABLE_TENSORFLOW=1,TENSORFLOW_USE_GPU=1,ENABLE_VAMP=1,ESSENTIA_COMMIT=${{ github.event.inputs.ESSENTIA_COMMIT }}"
            platforms: "linux/amd64"
            runs-on: "ubuntu-latest"
            tags: "${{ github.event.inputs.ESSENTIA_COMMIT }}-tensorflow-gpu${{ github.event.inputs.LATEST && ',latest-tensorflow-gpu' || '' }}"

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.tags }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          build-args: ${{ matrix.args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
